// <auto-generated />
using System;
using AspNetCore_EFCore_CodeFirst.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNetCore_EFCore_CodeFirst.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCore_EFCore_CodeFirst.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Nome = "Software"
                        });
                });

            modelBuilder.Entity("AspNetCore_EFCore_CodeFirst.Models.Livro", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("Titulo")
                        .HasDatabaseName("IX_Livro_Titulo");

                    b.ToTable("Livro");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Autor = "Tomas Harris",
                            CategoriaID = 1,
                            DataEntrada = new DateTime(2021, 10, 23, 21, 50, 14, 4, DateTimeKind.Local).AddTicks(7579),
                            Preco = 40.20m,
                            Quantidade = 10,
                            Titulo = "O Silêncio dos Inocentes"
                        },
                        new
                        {
                            ID = 2,
                            Autor = "Robert Cecil Martin",
                            CategoriaID = 1,
                            DataEntrada = new DateTime(2021, 10, 23, 21, 50, 14, 6, DateTimeKind.Local).AddTicks(2988),
                            Preco = 78.10m,
                            Quantidade = 15,
                            Titulo = "Clean Code"
                        },
                        new
                        {
                            ID = 3,
                            Autor = "Kent Beck e Martin Fowler",
                            CategoriaID = 1,
                            DataEntrada = new DateTime(2021, 10, 23, 21, 50, 14, 6, DateTimeKind.Local).AddTicks(3023),
                            Preco = 40.20m,
                            Quantidade = 10,
                            Titulo = "Refatoração: Aperfeiçoando o Projeto de Código Existente"
                        });
                });

            modelBuilder.Entity("AspNetCore_EFCore_CodeFirst.Models.Livro", b =>
                {
                    b.HasOne("AspNetCore_EFCore_CodeFirst.Models.Categoria", "Categoria")
                        .WithMany("Livros")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("AspNetCore_EFCore_CodeFirst.Models.Categoria", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
